!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],t):t((e=e||self).maptalks=e.maptalks||{},e.maptalks)}(this,function(e,t){"use strict";var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function i(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var a="undefined"!=typeof Float32Array?Float32Array:Array;Math.PI;function r(){var e=new a(3);return a!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function o(e,t,r){var n=new a(3);return n[0]=e,n[1]=t,n[2]=r,n}function s(e,t,r){var n=t[0],a=t[1],i=t[2],o=r[0],s=r[1],c=r[2];return e[0]=a*c-i*s,e[1]=i*o-n*c,e[2]=n*s-a*o,e}var c,u=function(e){var t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)};c=r();var l,p;l=new a(4),a!=Float32Array&&(l[0]=0,l[1]=0,l[2]=0,l[3]=0),p=l;function d(){var e=new a(4);return a!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function f(e,t,r,n){var a,i,o,s,c,u=t[0],l=t[1],p=t[2],d=t[3],f=r[0],h=r[1],_=r[2],v=r[3];return(i=u*f+l*h+p*_+d*v)<0&&(i=-i,f=-f,h=-h,_=-_,v=-v),c=1e-6<1-i?(a=Math.acos(i),o=Math.sin(a),s=Math.sin((1-n)*a)/o,Math.sin(n*a)/o):(s=1-n,n),e[0]=s*u+c*f,e[1]=s*l+c*h,e[2]=s*p+c*_,e[3]=s*d+c*v,e}var h,_,v,m,g,x,w,y=function(e,t){var r=t[0],n=t[1],a=t[2],i=t[3],o=r*r+n*n+a*a+i*i;return 0<o&&(o=1/Math.sqrt(o)),e[0]=r*o,e[1]=n*o,e[2]=a*o,e[3]=i*o,e};h=r(),_=o(1,0,0),v=o(0,1,0),m=d(),g=d(),x=new a(9),a!=Float32Array&&(x[1]=0,x[2]=0,x[3]=0,x[5]=0,x[6]=0,x[7]=0),x[0]=1,x[4]=1,x[8]=1,w=x;var T,b;T=new a(2),a!=Float32Array&&(T[0]=0,T[1]=0),b=T;function E(e,t,r){var n=e.createShader(t)||{};if(e.shaderSource(n,r),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw new Error(e.getShaderInfoLog(n)||"");return n}function R(e,t,r){var n=e.createProgram()||"",a=E(e,e.VERTEX_SHADER,t),i=E(e,e.FRAGMENT_SHADER,r);if(e.attachShader(n,a),e.attachShader(n,i),e.linkProgram(n),!e.getProgramParameter(n,e.LINK_STATUS))throw new Error(e.getProgramInfoLog(n)||"");for(var o={program:n},s=e.getProgramParameter(n,e.ACTIVE_ATTRIBUTES),c=0;c<s;c++){var u=e.getActiveAttrib(n,c);o[u.name]=e.getAttribLocation(n,u.name)}var l=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(c=0;c<l;c++){var p=e.getActiveUniform(n,c);o[p.name]=e.getUniformLocation(n,p.name)}return o}function A(e,t,r,n,a){var i=e.createTexture();return e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,t),r instanceof Uint8Array?e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n,a,0,e.RGBA,e.UNSIGNED_BYTE,r):e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r),e.bindTexture(e.TEXTURE_2D,null),i}function S(e,t,r){e.activeTexture(e.TEXTURE0+r),e.bindTexture(e.TEXTURE_2D,t)}function P(e,t){var r=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),r}function D(e,t,r,n){e.bindBuffer(e.ARRAY_BUFFER,t),e.enableVertexAttribArray(r),e.vertexAttribPointer(r,n,e.FLOAT,!1,0,0)}function M(e,t,r){e.bindFramebuffer(e.FRAMEBUFFER,t),r&&e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0)}var F="precision mediump float;\n#define GLSLIFY 1\n\nattribute vec2 a_pos;\n\nvarying vec2 v_tex_pos;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\n}\n";var L={0:"#3288bd",.1:"#66c2a5",.2:"#abdda4",.3:"#e6f598",.4:"#fee08b",.5:"#fdae61",.6:"#f46d43",1:"#d53e4f"},N=function(){function e(e,t){var r=t||{},n=r.fadeOpacity,a=r.speedFactor,i=r.dropRate,o=r.dropRateBump,s=r.colorRamp,c=r.numParticles;this.gl=e,this.fadeOpacity=n||.996,this.speedFactor=a||.25,this.dropRate=i||.003,this.dropRateBump=o||.01,this.drawProgram=null,this.screenProgram=null,this.updateProgram=null,this.quadBuffer=null,this.framebuffer=null,this.windData={},this.backgroundTexture=null,this.screenTexture=null,this.colorRampTexture=null,this.particleStateResolution=1/0,this._numParticles=1/0,this.particleIndexBuffer=null,this.particleStateTexture0=null,this.particleStateTexture1=null,this.windTexture=null,this.resize(),this.initialize(e,s,c)}return e.prototype.initialize=function(e,t,r){this.drawProgram=R(e,"precision mediump float;\n#define GLSLIFY 1\n\nattribute float a_index;\n\nuniform sampler2D u_particles;\nuniform float u_particles_res;\n\nuniform mat4 u_matrix;\nuniform float u_dateline_offset;\n//uniform vec4 u_bbox;\n\nvarying vec2 v_particle_pos;\n\nconst float PI = 3.14159265359;\n\nvec2 transform(vec2 inp, mat4 matrix) {\n  vec4 transformed = matrix * vec4(inp, 1, 1);\n  return transformed.xy / transformed.w;\n}\n\nvec2 wgs84ToMercator(vec2 xy) {\n  // convert to angle\n  float y = -180.0 * xy.y + 90.0;\n  // use the formule to convert\n  y = (180.0 - (180.0 / PI * log(tan(PI / 4.0 + y * PI / 360.0)))) / 360.0;\n  // pass x through, as it doesn't change\n  return vec2(xy.x, y);\n}\n\nvec2 mercatorToWGS84(vec2 xy) {\n  // convert lat into an angle\n  float y = radians(180.0 - xy.y * 360.0);\n  // use the formula to convert mercator -> WGS84\n  y = 360.0 / PI  * atan(exp(y)) - 90.0;\n  // normalize back into 0..1 interval\n  y = y / -180.0 + 0.5;\n  // pass lng through, as it doesn't change\n  return vec2(xy.x, y);\n}\n\nvoid main() {\n    vec4 color = texture2D(u_particles, vec2(\n        fract(a_index / u_particles_res),\n        floor(a_index / u_particles_res) / u_particles_res));\n\n    // decode current particle position from the pixel's RGBA value\n    v_particle_pos = vec2(\n        color.r / 255.0 + color.b,\n        color.g / 255.0 + color.a);\n//    vec2 v_particle_pos_lonlat = transform(v_particle_pos, u_offset);\n    vec2 world_coords_mercator = wgs84ToMercator(v_particle_pos);\n//    vec2 world_coords_mercator = v_particle_pos;\n\n    // convert to global geographic position\n//    v_particle_pos = u_bbox.xy + pos * (u_bbox.zw - u_bbox.xy);\n\n    // project the position with mercator projection\n//    float s = sin(radians(v_particle_pos.y * 180.0 - 90.0));\n//    float y = 1.0 - (degrees(log((1.0 + s) / (1.0 - s))) / 360.0 + 1.0) / 2.0;\n\n    gl_PointSize = 1.0;\n//    gl_Position = u_matrix * vec4(world_coords_mercator, 0, 1);\n  gl_Position = u_matrix * vec4(v_particle_pos.xy + vec2(u_dateline_offset, 0), 0, 1);\n}\n","precision mediump float;\n#define GLSLIFY 1\n\nuniform sampler2D u_wind;\nuniform vec2 u_wind_min;\nuniform vec2 u_wind_max;\nuniform sampler2D u_color_ramp;\n\nvec2 world_coords_mercator;\n\nvoid main() {\n    vec2 velocity = mix(u_wind_min, u_wind_max, texture2D(u_wind, world_coords_mercator).rg);\n    float speed_t = length(velocity) / length(u_wind_max);\n\n    // color ramp is encoded in a 16x16 texture\n    vec2 ramp_pos = vec2(\n        fract(16.0 * speed_t),\n        floor(16.0 * speed_t) / 16.0);\n\n    gl_FragColor = texture2D(u_color_ramp, ramp_pos);\n}\n"),this.updateProgram=R(e,F,"precision highp float;\n#define GLSLIFY 1\n\nuniform sampler2D u_particles;\nuniform sampler2D u_wind;\nuniform vec2 u_wind_res;\nuniform vec2 u_wind_min;\nuniform vec2 u_wind_max;\nuniform float u_rand_seed;\nuniform float u_speed_factor;\nuniform float u_drop_rate;\nuniform float u_drop_rate_bump;\n//uniform vec4 u_bbox;\n\nvarying vec2 v_tex_pos;\n\n// pseudo-random generator\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\nfloat rand(const vec2 co) {\n    float t = dot(rand_constants.xy, co);\n    return fract(sin(t) * (rand_constants.z + t));\n}\n\n// wind speed lookup; use manual bilinear filtering based on 4 adjacent pixels for smooth interpolation\nvec2 lookup_wind(const vec2 uv) {\n    // return texture2D(u_wind, uv).rg; // lower-res hardware filtering\n    vec2 px = 1.0 / u_wind_res;\n    vec2 vc = (floor(uv * u_wind_res)) * px;\n    vec2 f = fract(uv * u_wind_res);\n    vec2 tl = texture2D(u_wind, vc).rg;\n    vec2 tr = texture2D(u_wind, vc + vec2(px.x, 0)).rg;\n    vec2 bl = texture2D(u_wind, vc + vec2(0, px.y)).rg;\n    vec2 br = texture2D(u_wind, vc + px).rg;\n    return mix(mix(tl, tr, f.x), mix(bl, br, f.x), f.y);\n}\n\nvoid main() {\n    vec4 color = texture2D(u_particles, v_tex_pos);\n    vec2 pos = vec2(\n        color.r / 255.0 + color.b,\n        color.g / 255.0 + color.a); // decode particle position from pixel RGBA\n\n    // convert to global geographic position\n//    vec2 global_pos = u_bbox.xy + pos * (u_bbox.zw - u_bbox.xy);\n\n    vec2 velocity = mix(u_wind_min, u_wind_max, lookup_wind(pos));\n    float speed_t = length(velocity) / length(u_wind_max);\n\n    // take EPSG:4236 distortion into account for calculating where the particle moved\n//    float distortion = cos(radians(global_pos.y * 180.0 - 90.0));\n//    vec2 offset = vec2(velocity.x / distortion, -velocity.y) * 0.0001 * u_speed_factor;\n    vec2 offset = vec2(velocity.x, -velocity.y) * 0.0001 * u_speed_factor;\n    // update particle position, wrapping around the boundaries\n    pos = fract(1.0 + pos + offset);\n\n    // a random seed to use for the particle drop\n    vec2 seed = (pos + v_tex_pos) * u_rand_seed;\n\n    // drop rate is a chance a particle will restart at random position, to avoid degeneration\n    float drop_rate = u_drop_rate + speed_t * u_drop_rate_bump;\n    float drop = step(1.0 - drop_rate, rand(seed));\n\n//    float retain = step(drop_rate, rand(seed));\n\n    vec2 random_pos = vec2(rand(seed + 1.3), rand(seed + 2.1));\n//    pos = mix(pos, random_pos, 1.0 - retain);\n    pos = mix(pos, random_pos, drop);\n    // encode the new particle position back into RGBA\n    gl_FragColor = vec4(\n        fract(pos * 255.0),\n        floor(pos * 255.0) / 255.0);\n}\n"),this.screenProgram=R(e,F,"precision mediump float;\n#define GLSLIFY 1\n\nuniform sampler2D u_screen;\nuniform float u_opacity;\n\nvarying vec2 v_tex_pos;\n\nvoid main() {\n    vec4 color = texture2D(u_screen, 1.0 - v_tex_pos);\n    // a hack to guarantee opacity fade out even with a value close to 1.0\n    gl_FragColor = vec4(floor(255.0 * color * u_opacity) / 255.0);\n}\n"),this.quadBuffer=P(e,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1])),this.framebuffer=e.createFramebuffer(),this.setColorRamp(t||L),this.numParticles=r||65536},e.prototype.resize=function(){var e=this.gl,t=new Uint8Array(e.canvas.width*e.canvas.height*4);this.backgroundTexture=A(e,e.NEAREST,t,e.canvas.width,e.canvas.height),this.screenTexture=A(e,e.NEAREST,t,e.canvas.width,e.canvas.height)},e.prototype.setColorRamp=function(e){this.colorRampTexture=A(this.gl,this.gl.LINEAR,function(e){var t=document.createElement("canvas"),r=t.getContext("2d");t.width=256,t.height=1;var n=r.createLinearGradient(0,0,256,0);for(var a in e)n.addColorStop(+a,e[a]);return r.fillStyle=n,r.fillRect(0,0,256,1),new Uint8Array(r.getImageData(0,0,256,1).data)}(e),16,16)},Object.defineProperty(e.prototype,"numParticles",{get:function(){return this._numParticles},set:function(e){var t=this.gl,r=Math.ceil(Math.sqrt(e));this.particleStateResolution=r,this._numParticles=r*r;for(var n=new Uint8Array(4*this._numParticles),a=0;a<n.length;a++)n[a]=Math.floor(256*Math.random());this.particleStateTexture0=A(t,t.NEAREST,n,r,r),this.particleStateTexture1=A(t,t.NEAREST,n,r,r);var i=new Float32Array(this._numParticles);for(a=0;a<this._numParticles;a++)i[a]=a;this.particleIndexBuffer=P(t,i)},enumerable:!0,configurable:!0}),e.prototype.setWind=function(e,t){this.windData=e,this.windTexture=A(this.gl,this.gl.LINEAR,t)},e.prototype.prepareToDraw=function(){var e=[this.gl,this.windData];e[0]&&e[1]&&this.updateParticles()},e.prototype.render=function(e,t){var r=[this.gl,this.windData];r[0]&&r[1]&&this.drawScreen(e,t)},e.prototype.drawScreen=function(e,t){var r=this.gl;r.viewport(0,0,r.canvas.width,r.canvas.height),M(r,this.framebuffer,this.screenTexture),this.drawTexture(this.backgroundTexture,this.fadeOpacity),M(r,null),r.enable(r.BLEND),r.blendFunc(r.ONE,r.ONE_MINUS_SRC_ALPHA),this.drawParticles(e,t),this.drawTexture(this.screenTexture,this.fadeOpacity),r.disable(r.BLEND);var n=this.backgroundTexture;this.backgroundTexture=this.screenTexture,this.screenTexture=n},e.prototype.drawTexture=function(e,t){var r=this.gl,n=this.screenProgram;r.useProgram(n.program),D(r,this.quadBuffer,n.a_pos,2),S(r,e,2),r.uniform1i(n.u_screen,2),r.uniform1f(n.u_opacity,t),r.drawArrays(r.TRIANGLES,0,6)},e.prototype.drawParticles=function(e,t){var r=this.gl,n=this.drawProgram;r.useProgram(n.program),S(r,this.windTexture,0),S(r,this.particleStateTexture0,1),S(r,this.colorRampTexture,2),D(r,this.particleIndexBuffer,n.a_index,1),r.uniform1i(n.u_wind,0),r.uniform1i(n.u_particles,1),r.uniform1i(n.u_color_ramp,2),r.uniform1f(n.u_particles_res,this.particleStateResolution),r.uniform2f(n.u_wind_min,this.windData.uMin,this.windData.vMin),r.uniform2f(n.u_wind_max,this.windData.uMax,this.windData.vMax),r.uniform1f(n.u_dateline_offset,t),r.uniformMatrix4fv(n.u_matrix,!1,e),r.drawArrays(r.POINTS,0,this._numParticles)},e.prototype.updateParticles=function(){var e=this.gl,t=e.isEnabled(e.BLEND);e.disable(e.BLEND),M(e,this.framebuffer,this.particleStateTexture1),e.viewport(0,0,this.particleStateResolution,this.particleStateResolution);var r=this.updateProgram;e.useProgram(r.program),S(e,this.windTexture,0),S(e,this.particleStateTexture0,1),D(e,this.quadBuffer,r.a_pos,2),e.uniform1i(r.u_wind,0),e.uniform1i(r.u_particles,1),e.uniform1f(r.u_rand_seed,Math.random()),e.uniform2f(r.u_wind_res,this.windData.width,this.windData.height),e.uniform2f(r.u_wind_min,this.windData.uMin,this.windData.vMin),e.uniform2f(r.u_wind_max,this.windData.uMax,this.windData.vMax),e.uniform1f(r.u_speed_factor,this.speedFactor),e.uniform1f(r.u_drop_rate,this.dropRate),e.uniform1f(r.u_drop_rate_bump,this.dropRateBump),e.drawArrays(e.TRIANGLES,0,6);var n=this.particleStateTexture0;this.particleStateTexture0=this.particleStateTexture1,this.particleStateTexture1=n,t&&e.enable(e.BLEND)},e}();var C=function(e,t,r,n){if("undefined"==typeof document)return new n(e,t);var a=document.createElement("canvas");return a.width=e*r,a.height=t*r,a.style.width=e+"px",a.style.height=t+"px",a};function O(e){console.log(e.statusMessage)}var I=t.Browser.retina?2:1,B=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return i(e,r),e.prototype.draw=function(){this.prepareCanvas(),this.prepareDrawContext(),this._drawLayer()},e.prototype.needToRedraw=function(){var e=this.getMap();return!(e.isZooming()&&!e.getPitch())&&r.prototype.needToRedraw.call(this)},e.prototype.onCanvasCreate=function(){this.canvas&&this.layer.options.doubleBuffer&&(this.buffer=C(this.canvas.width,this.canvas.height,I,this.getMap().CanvasClass),this.context=this.buffer.getContext("2d"))},e.prototype.createCanvas=function(){if(!this.canvas){var e=this.getMap(),t=e.getSize(),r=[I*t.width,I*t.height],n=r[0],a=r[1];this.canvas=C(n,a,I,e.CanvasClass),this.gl=function(e,t){if(void 0===t&&(t={}),e){var r=null;return e.addEventListener("webglcontextcreationerror",O,!1),(r=(r=e.getContext("webgl2",t))||e.getContext("experimental-webgl2",t))||(r=(r=e.getContext("webgl",t))||e.getContext("experimental-webgl",t)),e.removeEventListener("webglcontextcreationerror",O,!1),r&&(r.clearColor(0,0,0,0),r.enable(r.BLEND),function(e,t){switch(t){case"source-over":e.blendFunc(e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case"destination-over":e.blendFunc(e.ONE_MINUS_DST_ALPHA,e.ONE);break;case"source-in":e.blendFunc(e.DST_ALPHA,e.ZERO);break;case"destination-in":e.blendFunc(e.ZERO,e.SRC_ALPHA);break;case"source-out":e.blendFunc(e.ONE_MINUS_DST_ALPHA,e.ZERO);break;case"destination-out":e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_ALPHA);break;case"source-atop":e.blendFunc(e.DST_ALPHA,e.ONE_MINUS_SRC_ALPHA);break;case"destination-atop":e.blendFunc(e.ONE_MINUS_DST_ALPHA,e.SRC_ALPHA);break;case"xor":e.blendFunc(e.ONE_MINUS_DST_ALPHA,e.ONE_MINUS_SRC_ALPHA);break;case"lighter":e.blendFunc(e.ONE,e.ONE);break;case"copy":e.blendFunc(e.ONE,e.ZERO);break;case"destination":e.blendFunc(e.ZERO,e.ONE);break;default:e.blendFunc(e.ONE,e.ONE_MINUS_SRC_ALPHA)}}(r,t.globalCompositeOperation||"source-over"),r.disable(r.DEPTH_TEST)),r}}(this.canvas,this.layer.options.glOptions),this.onCanvasCreate(),this.layer.fire("canvascreate",{context:this.context,gl:this.gl})}},e.prototype.resizeCanvas=function(e){if(this.canvas&&this.gl){var t=e||this.getMap().getSize();this.canvas.height=I*t.height,this.canvas.width=I*t.width,this.gl.viewport(0,0,this.canvas.width,this.canvas.height)}},e.prototype.clearCanvas=function(){this.canvas&&this.gl&&(this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.context&&this.context.clearRect(0,0,this.canvas.width,this.canvas.height))},e.prototype.prepareCanvas=function(){this.canvas?this.clearCanvas():this.createCanvas();var e=r.prototype.prepareCanvas.call(this);return this.layer.fire("renderstart",{context:this.context,gl:this.gl}),e},e.prototype.onZoomStart=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];r.prototype.onZoomStart.apply(this,e)},e.prototype.onZoomEnd=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];r.prototype.onZoomEnd.apply(this,e)},e.prototype.remove=function(){delete this._drawContext,r.prototype.remove.call(this)},e.prototype.getMap=function(){return r.prototype.getMap.call(this)},e}(t.renderer.CanvasLayerRenderer),U={renderer:"webgl",doubleBuffer:!0,animation:!0,glOptions:{alpha:!0,antialias:!0,preserveDrawingBuffer:!0}},k=12756274*Math.PI/(256*Math.pow(2,20));var G=function(a){function e(e,t,r){void 0===r&&(r={});var n=a.call(this,e,Object.assign(U,r))||this;return n.datas=t,n.wind=null,n}return i(e,a),e.prototype.getWindData=function(){return this.datas},e.prototype.setWindData=function(e){this.datas=e,this.wind&&this.wind.setWind(this.datas.data,this.datas.image)},e.prototype.draw=function(){this.renderScene()},e.prototype.drawOnInteracting=function(){this.renderScene()},e.prototype.renderScene=function(){var e=this.getMap();if(e){var t,r,n,a,i,o,s,c=(t=e.getResolution(),19-Math.log(t/k)/Math.LN2),u=e.projViewMatrix.slice(),l=Math.pow(2,c),p=(r=[],n=u,i=(a=[l,l,l])[0],o=a[1],s=a[2],r[0]=n[0]*i,r[1]=n[1]*i,r[2]=n[2]*i,r[3]=n[3]*i,r[4]=n[4]*o,r[5]=n[5]*o,r[6]=n[6]*o,r[7]=n[7]*o,r[8]=n[8]*s,r[9]=n[9]*s,r[10]=n[10]*s,r[11]=n[11]*s,r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15],r),d=this._getRenderer();if(!this.wind){if(!d.gl)return;var f=this.options,h=f.fadeOpacity,_=f.speedFactor,v=f.dropRate,m=f.dropRateBump,g=f.colorRamp,x=f.numParticles;this.wind=new N(d.gl,{fadeOpacity:h,speedFactor:_,dropRate:v,dropRateBump:m,colorRamp:g,numParticles:x})}if(this.wind){this.wind.prepareToDraw();var w=e.getExtent(),y=Math.max(0,Math.ceil((w.xmax-180)/360)),T=Math.max(0,Math.ceil((w.xmin+180)/-360));this.wind.render(p,0);for(var b=1;b<=y;b++)this.wind.render(p,b);for(b=1;b<=T;b++)this.wind.render(p,-b)}d.completeRender()}},e.prototype.onResize=function(){this.wind&&this.wind.resize(),a.prototype.onResize.call(this)},e.prototype.remove=function(){a.prototype.remove.call(this)},e}(t.CanvasLayer);G.registerRenderer("webgl",B),e.WindLayer=G,Object.defineProperty(e,"__esModule",{value:!0})});
